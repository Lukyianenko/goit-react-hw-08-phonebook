{"version":3,"file":"static/js/996.d1f225d4.chunk.js","mappings":"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","sources":["components/BookContacts/BookContacts.styled.jsx","components/BookContacts/ListContacts.jsx","components/BookContacts/AddContact.jsx","components/BookContacts/FilterContacts.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h1`\nfont-size: 40px;\ndisplay: block;\npadding: 45px;\nbackground-color: #19fff7;\nborder-radius: 30%;\ncolor: #4c2254;\n`\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    color: #4c2254;\n    font-size: 26px;\n`\n\nexport const Form = styled.form`\n    border: 3px solid #44baff;\n    border-radius: 45px;\n    background-color: #a9fbff;\n    padding: 30px 40px;\n    text-align: center;\n    margin-bottom: 30px;\n`\n\nexport const Input = styled.input`\n    height: 30px;\n    font-size: 24px;\n    border-color: #44baff;\n    color: blue;\n    margin-bottom: 30px;\n`\n\nexport const Button = styled.button`\n    padding: 15px;\n    background-color: #00f6bd;\n    border-radius: 35px;\n    font-size: 18px;\n`\n\nexport const LabelFilt = styled.label`\n    display: flex;\n    flex-direction: column;\n    color: #4c2254;\n    font-size: 24px;\n    padding: 15px;\n    background-color: aquamarine;\n`\n\nexport const TitleContact = styled.h2`\nfont-size: 40px;\ndisplay: block;\npadding: 25px;\nbackground-color: #19fff7;\ncolor: #4c2254;\n`\n\nexport const List = styled.ul`\n    list-style: none;\n    font-size: 26px;\n    width: 400px;\n`\n\nexport const ItemList = styled.li`\n    display: flex;\n    justify-content: space-around;\n`\n\nexport const ContList = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    background-color: #19fff7;\n    margin-top: 10px;\n`\n\nexport const ButtonList = styled.button`\n    padding: 5px;\n    background-color: #00f6bd;\n    border-radius: 10px;\n    font-size: 14px;\n    margin-left: auto;\n`","import PropTypes from 'prop-types';\nimport { TitleContact, List, ContList, ButtonList, ItemList } from './BookContacts.styled';\nimport { getContacts } from \"../../redux/selectors\";\nimport { deleteContact } from \"../../redux/contacts/operations\";\nimport { useSelector, useDispatch } from \"react-redux/es/exports\";\n\nexport const ListContacts = () => {\n    const contacts = useSelector(getContacts);\n    const dispatch = useDispatch();\n\n    const filtr = useSelector(state => state.contact.filter);\n    const normalizeFiltr = filtr.toLowerCase();\n    const visibleContacts = contacts.filter(contact => contact.name.toLowerCase().includes(normalizeFiltr));\n\n    const onDelete = (id) => dispatch(deleteContact(id));\n\n    return (\n    <ContList>\n        <TitleContact>Contacts</TitleContact>\n        <List>\n        {visibleContacts.map(({ id, name, phone }) => (<ItemList key={id}>{name}: {phone} \n        <ButtonList type=\"button\" onClick={() => onDelete(id)}>Delete</ButtonList>\n        </ItemList>))}\n        </List>\n    </ContList>\n    )\n    \n}\n\nListContacts.propTyoes = {\n    contacts: PropTypes.arrayOf(PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    })).isRequired,\n    onDelete: PropTypes.func,\n}","import { useState } from \"react\"; \nimport PropTypes from 'prop-types';\nimport { Label, Form, Input, Button } from './BookContacts.styled';\nimport { useDispatch, useSelector } from \"react-redux/es/exports\";\nimport { addContact } from \"../../redux/contacts/operations\";\nimport { getContacts } from \"../../redux/selectors\";\n\nexport const AddContscts = () => {\n    const [name, setName] = useState('');\n    const [phone, setPhone] = useState('');\n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n    \n    const onInputChangeName = (e) => {\n        setName(e.target.value);\n      }\n    const onInputChangeNumber = (e) => {\n      setPhone(e.target.value);\n      }\n    const onSubmitContact = (e) => {\n        e.preventDefault();\n        const includesName = contacts.map(item => {return (item.name.toLowerCase())});\n        if(includesName.includes(name.toLowerCase())) {\n          alert(`${name} is already in contacts`)\n          return\n        }  \n        else {\n          dispatch(addContact({name, phone}));\n        }\n        reset();\n      }\n    const reset = () => {\n        setName('');\n        setPhone('');\n      }\n\n    return (\n    <Form onSubmit={onSubmitContact}>\n          <Label>\n            Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={onInputChangeName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore        d'Artagnan\"\n          required\n        />\n        </Label>\n        <Label>\n            Number\n        <Input\n         type=\"tel\"\n         name=\"number\"\n         value={phone}\n         onChange={onInputChangeNumber}\n         pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n         title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n         required\n        />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n        </Form>\n        )\n}\n\nAddContscts.propTypes = {\n  state: PropTypes.arrayOf(PropTypes.exact({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  })),\n  onInputChange: PropTypes.func,\n  onSubmitContact: PropTypes.func,\n  reset: PropTypes.func,\n  render: PropTypes.func,\n}","import { LabelFilt } from './BookContacts.styled';\nimport { useSelector, useDispatch } from \"react-redux/es/exports\";\nimport { onFilter } from '../../redux/contacts/slice';\nimport { getStatusFilter } from \"../../redux/selectors\";\n\nexport const Filter = () => {\n    const value = useSelector(getStatusFilter);\n    const dispatch = useDispatch();\n\n    return(\n        <LabelFilt>\n            Find contacts by name\n            <input type=\"text\" name='filtr' value={value} onChange={(e) => dispatch(onFilter(e.target.value))} />\n        </LabelFilt>\n    )\n        \n   }\n\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ListContacts } from '../components/BookContacts/ListContacts';\nimport { AddContscts } from '../components/BookContacts/AddContact';\nimport { Filter } from '../components/BookContacts/FilterContacts';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { getIsLoading } from '../redux/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n      <AddContscts />\n      <Filter />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ListContacts />\n    </>\n  );\n}\n"],"names":["Label","styled","Form","Input","Button","LabelFilt","TitleContact","List","ItemList","ContList","ButtonList","ListContacts","contacts","useSelector","getContacts","dispatch","useDispatch","normalizeFiltr","state","contact","filter","toLowerCase","visibleContacts","name","includes","map","id","phone","type","onClick","deleteContact","onDelete","propTyoes","PropTypes","number","isRequired","AddContscts","useState","setName","setPhone","reset","onSubmit","e","preventDefault","item","alert","addContact","value","onChange","target","pattern","title","required","Filter","getStatusFilter","onFilter","Contacts","isLoading","getIsLoading","useEffect","fetchContacts","Helmet"],"sourceRoot":""}